{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GemX Analyzer","text":"<p>Feche o loop de melhoria cont\u00ednua \u2014 do <code>.lkt.txt</code> ao PR Grompt (idea\u00e7\u00e3o) \u2192 Analyzer (planos EXEC/CHI/DORA) \u2192 LookAtni (diff determin\u00edstico) \u2192 GoBE (orquestra) \u2192 Feedback.</p> <ul> <li> <p> Quickstart (90s)   Suba o gateway, teste SSE e gere seu primeiro ciclo.    Come\u00e7ar</p> </li> <li> <p> Config &amp; Providers   BYOK multi-provider (OpenAI, Gemini, Anthropic, Groq) com pol\u00edticas e auditoria.    Providers</p> </li> <li> <p>:git: Do plano ao PR   LookAtni valida e aplica diffs de forma determin\u00edstica; PR autom\u00e1tico ou <code>.patch</code>.    Fluxos</p> </li> </ul>"},{"location":"#por-que","title":"Por que","text":"<p>Ferramentas de IA ajudam no editor, mas param antes do PR com governan\u00e7a. O GemX Analyzer fecha o ciclo com pol\u00edticas, resili\u00eancia, auditoria e observabilidade.</p>"},{"location":"#o-que-voce-ganha","title":"O que voc\u00ea ganha","text":"<ul> <li>PRs seguros com gates/cad\u00eancia/can\u00e1rio</li> <li>M\u00e9tricas (DORA/CHI/HIR) e SSE confi\u00e1vel</li> <li>Sem lock-in: BYOK + adapters por vendor</li> <li>Prod-ready: CORS/TLS/Rate/Circuit/Retry + <code>/metrics</code> e <code>/healthz</code></li> </ul> <p>MIT \u2022 Kubex Ecosystem \u2022 Feito em Go + React + TypeScript \u2022 https://github.com/kubex-ecosystem/analyzer</p>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/","title":"LookAtni Direct Integration - Frontend","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#overview","title":"Overview","text":"<p>O LookAtni Direct Extractor permite extrair e analisar c\u00f3digo diretamente no browser, sem precisar de chamadas para o backend! Esta \u00e9 uma integra\u00e7\u00e3o mais elegante que roda o LookAtni como uma biblioteca Node.js no frontend.</p>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#features","title":"Features","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#client-side-processing","title":"\ud83c\udfaf Client-Side Processing","text":"<ul> <li>Extra\u00e7\u00e3o de projetos diretamente no browser</li> <li>Processamento de arquivos usando FileReader API</li> <li>Suporte para sele\u00e7\u00e3o de pastas e arquivos m\u00faltiplos</li> <li>Zero depend\u00eancia do backend para extra\u00e7\u00e3o b\u00e1sica</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#code-fragment-analysis","title":"\ud83e\udde9 Code Fragment Analysis","text":"<ul> <li>Extra\u00e7\u00e3o autom\u00e1tica de fun\u00e7\u00f5es, classes, interfaces, componentes</li> <li>Detec\u00e7\u00e3o de imports/exports</li> <li>An\u00e1lise de linguagens: JS, TS, Go, Python, Java, C++, PHP, Ruby, etc.</li> <li>Filtros por tipo, linguagem e busca textual</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#archive-generation","title":"\ud83d\udce6 Archive Generation","text":"<ul> <li>Cria\u00e7\u00e3o de arquivos naveg\u00e1veis em HTML</li> <li>Download de archives ZIP com estrutura do projeto</li> <li>Metadados completos do projeto (estat\u00edsticas, linguagens, etc.)</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#uiux-features","title":"\ud83c\udfa8 UI/UX Features","text":"<ul> <li>Interface responsiva com modo escuro</li> <li>Anima\u00e7\u00f5es com Framer Motion</li> <li>Sele\u00e7\u00e3o m\u00faltipla de fragmentos</li> <li>Preview em tempo real dos fragmentos de c\u00f3digo</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#how-to-use","title":"How to Use","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#1-mode-selection","title":"1. Mode Selection","text":"<p>No <code>ProjectExtractor</code>, agora temos 3 modos:</p> <ul> <li>Direct Extraction: Nova funcionalidade - processamento client-side</li> <li>Preview Mode: Modo legado de preview</li> <li>Download Mode: Modo legado de download</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#2-file-selection","title":"2. File Selection","text":"<pre><code>// Select entire folder\n&lt;button onClick={selectFolder}&gt;Select Folder&lt;/button&gt;\n\n// Select multiple files\n&lt;button onClick={selectFiles}&gt;Select Files&lt;/button&gt;\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#3-processing","title":"3. Processing","text":"<p>O processamento acontece automaticamente ap\u00f3s a sele\u00e7\u00e3o:</p> <ul> <li>Leitura dos arquivos via FileReader</li> <li>An\u00e1lise de linguagem por extens\u00e3o</li> <li>Extra\u00e7\u00e3o de fragmentos via regex patterns</li> <li>Constru\u00e7\u00e3o da estrutura do projeto</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#4-fragment-browser","title":"4. Fragment Browser","text":"<pre><code>// Filter fragments\n- Type: function, class, interface, component, etc.\n- Language: javascript, typescript, go, python, etc.\n- Search: text search in fragment names\n\n// Select fragments\n- Click to select/deselect\n- \"Use Selected for Analysis\" to pass to analysis\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#5-archive-download","title":"5. Archive Download","text":"<pre><code>// Download navigable archive\n&lt;button onClick={downloadArchive}&gt;Download Archive&lt;/button&gt;\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#implementation-details","title":"Implementation Details","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#core-functions","title":"Core Functions","text":"<pre><code>// Extract project from FileList\nconst extractProjectFromFiles = async (fileData: Map&lt;string, File&gt;)\n\n// Read file content\nconst readFileAsText = (file: File): Promise&lt;string&gt;\n\n// Language detection\nconst getLanguageFromExtension = (extension: string): string\n\n// Fragment extraction\nconst extractFragmentsFromContent = (content: string, filePath: string, language: string)\n\n// Archive creation\nconst createProjectArchive = async (project: ExtractedProject): Promise&lt;Blob&gt;\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#supported-file-types","title":"Supported File Types","text":"<pre><code>const codeExtensions = [\n  '.js', '.ts', '.jsx', '.tsx',     // JavaScript/TypeScript\n  '.go',                            // Go\n  '.py',                            // Python\n  '.java',                          // Java\n  '.cpp', '.c', '.h',               // C/C++\n  '.php',                           // PHP\n  '.rb',                            // Ruby\n  '.rs',                            // Rust\n  '.swift',                         // Swift\n  '.kt', '.scala',                  // Kotlin/Scala\n  '.cs', '.vb', '.fs',              // .NET languages\n  '.html', '.css', '.scss',         // Web\n  '.json', '.xml', '.yaml',         // Data\n  '.md', '.txt', '.rst'             // Documentation\n];\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#language-mapping","title":"Language Mapping","text":"<pre><code>const languageMap = {\n  '.js': 'javascript',\n  '.ts': 'typescript',\n  '.jsx': 'javascript',\n  '.tsx': 'typescript',\n  '.go': 'go',\n  '.py': 'python',\n  // ... more mappings\n};\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#integration-points","title":"Integration Points","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#1-with-projectextractor","title":"1. With ProjectExtractor","text":"<pre><code>&lt;LookAtniDirectExtractor\n  onFilesExtracted={(files) =&gt; {\n    // Handle extracted files\n    console.log('Files extracted:', files);\n  }}\n  onFragmentsSelected={(fragments) =&gt; {\n    // Handle selected fragments for analysis\n    console.log('Fragments selected:', fragments);\n  }}\n/&gt;\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#2-with-analysis-pipeline","title":"2. With Analysis Pipeline","text":"<pre><code>// Pass extracted fragments to analysis\nconst selectedFragments = fragments.filter(f =&gt; selectedIds.has(f.id));\nanalysisService.analyzeFragments(selectedFragments);\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#3-with-kanban-integration","title":"3. With Kanban Integration","text":"<pre><code>// Drag fragments to Kanban boards\nconst handleFragmentDrop = (fragment, columnId) =&gt; {\n  kanbanService.addFragmentToColumn(fragment, columnId);\n};\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#browser-compatibility","title":"Browser Compatibility","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#required-apis","title":"Required APIs","text":"<ul> <li>FileReader API: Para leitura de arquivos</li> <li>Blob API: Para cria\u00e7\u00e3o de archives</li> <li>URL.createObjectURL: Para downloads</li> <li>webkitdirectory: Para sele\u00e7\u00e3o de pastas (Chrome/Edge)</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#fallbacks","title":"Fallbacks","text":"<ul> <li>Graceful degradation para browsers sem suporte a <code>webkitdirectory</code></li> <li>Fallback para sele\u00e7\u00e3o de arquivos m\u00faltiplos</li> <li>Error handling para APIs n\u00e3o suportadas</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#future-enhancements","title":"Future Enhancements","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#1-webassembly-integration","title":"1. WebAssembly Integration","text":"<pre><code>// Use LookAtni compiled to WASM for better performance\nconst wasmLookatni = await import('lookatni-wasm');\nconst result = wasmLookatni.extractProject(files);\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#2-web-workers","title":"2. Web Workers","text":"<pre><code>// Process large projects in background\nconst worker = new Worker('lookatni-worker.js');\nworker.postMessage({ files, options });\n</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#3-advanced-parsers","title":"3. Advanced Parsers","text":"<ul> <li>Tree-sitter integration for precise syntax analysis</li> <li>LSP integration for semantic analysis</li> <li>AST-based fragment extraction</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#4-real-time-collaboration","title":"4. Real-time Collaboration","text":"<ul> <li>Share extracted projects via WebRTC</li> <li>Collaborative fragment selection</li> <li>Real-time code navigation</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#performance-considerations","title":"Performance Considerations","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#memory-management","title":"Memory Management","text":"<ul> <li>Process files in chunks for large projects</li> <li>Use streaming for large file processing</li> <li>Clean up object URLs after use</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#ui-responsiveness","title":"UI Responsiveness","text":"<ul> <li>Use requestAnimationFrame for large UI updates</li> <li>Debounce search and filter operations</li> <li>Virtual scrolling for large fragment lists</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#error-handling","title":"Error Handling","text":"<ul> <li>Graceful degradation for unsupported files</li> <li>Progress indicators for large operations</li> <li>Clear error messages and recovery options</li> </ul>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#meta-recursivity-with-grompt","title":"Meta-Recursivity with GromPT","text":""},{"location":"LOOKATNI_DIRECT_INTEGRATION/#analysis-flow","title":"Analysis Flow","text":"<pre><code>flowchart TD\n    A[LookAtni Extract] --&gt; B[Fragment Selection]\n    B --&gt; C[Analysis with GromPT]\n    C --&gt; D[Improvement Suggestions]\n    D --&gt; E[Apply Changes]\n    E --&gt; A</code></pre>"},{"location":"LOOKATNI_DIRECT_INTEGRATION/#integration-example","title":"Integration Example","text":"<pre><code>// Meta-recursive improvement cycle\nconst improveProject = async (project) =&gt; {\n  // 1. Extract with LookAtni\n  const fragments = await extractFragments(project);\n\n  // 2. Analyze with GromPT\n  const analysis = await grompt.analyze(fragments);\n\n  // 3. Apply improvements\n  const improved = await grompt.improve(analysis);\n\n  // 4. Re-extract and validate\n  const newProject = await extractFragments(improved);\n\n  return newProject;\n};\n</code></pre> <p>Esta implementa\u00e7\u00e3o transforma o analyzer em uma ferramenta completamente autossuficiente para an\u00e1lise de c\u00f3digo, rodando diretamente no browser com o poder do LookAtni! \ud83d\ude80\u2728</p>"},{"location":"about/changelog/","title":"Changelog","text":"<p>Consulte a p\u00e1gina de Releases no GitHub para o hist\u00f3rico detalhado:</p> <ul> <li>https://github.com/kubex-ecosystem/analyzer/releases</li> </ul>"},{"location":"about/contributing/","title":"Contributing","text":"<p>Veja diretrizes em <code>docs/development/contributing.md</code>. Resumo:</p> <ul> <li>Use Go 1.25 e <code>gofmt</code>.</li> <li>Rode <code>go test ./...</code> antes de enviar PR.</li> <li>Commits no modo imperativo e escopo conciso.</li> </ul>"},{"location":"about/license/","title":"License","text":"<p>MIT \u2014 veja o arquivo <code>LICENSE</code> na raiz do reposit\u00f3rio.</p>"},{"location":"architecture/components/","title":"Components","text":"<ul> <li>Transport: HTTP/SSE, state sync (LWW + ETag)</li> <li>Registry: carrega config e resolve provider</li> <li>Providers: adapters finos por vendor</li> <li>CLI: <code>cmd/main.go</code> (bin\u00e1rio <code>analyzer</code>)</li> <li>Gateway: subcomando <code>analyzer gateway serve</code></li> </ul>"},{"location":"architecture/data-persistence/","title":"Data &amp; Persistence","text":"<p>Planejado: sincroniza\u00e7\u00e3o de estado via LWW + ETag.</p> <ul> <li>Export: <code>POST /v1/state/export</code> com <code>If-Match</code>/<code>etag</code></li> <li>Import: <code>GET /v1/state/import</code> retorna <code>version</code> + <code>etag</code> + <code>payload</code></li> </ul> <p>Status atual: endpoints de state ainda n\u00e3o foram implementados nesta base.</p>"},{"location":"architecture/flows/","title":"Flows (Analyzer \u21c4 Grompt \u21c4 LookAtni \u21c4 GoBE)","text":"<ol> <li>Idea\u00e7\u00e3o no Grompt \u2192 <code>.lkt.txt</code></li> <li>Analyzer processa e emite planos (EXEC/CHI/DORA)</li> <li>LookAtni aplica diffs determin\u00edsticos \u2192 patch/PR</li> <li>GoBE orquestra autentica\u00e7\u00e3o/tenancy e integra com o backend</li> </ol> <p>Endpoints principais: <code>/v1/chat</code>, <code>/v1/advise</code>, <code>/v1/providers</code>, <code>/v1/state/*</code>.</p>"},{"location":"architecture/overview/","title":"Architecture Overview","text":"<p>O GemX Analyzer \u00e9 um gateway + orquestrador com adapters por provider e transporte SSE s\u00f3lido.</p> <pre><code>  %%{init: {'securityLevel': 'loose'}}%%\n  flowchart LR\n    U[User] --&gt; UI[CLI / SDK / UI]\n    UI -- HTTP/SSE --&gt; A\n\n    subgraph A[\"Analyzer\"]\n      T[Transport]\n      R[Registry]\n      P[Providers]\n      S[State Sync]\n      T --&gt; R --&gt; P\n      P --&gt; S\n    end\n\n    subgraph CP[\"cloud_providers\"]\n      OAI[openai]\n      AZO[azure_openai]\n      ANT[anthropic]\n      GGP[google_palm]\n      BED[aws_bedrock]\n    end\n\n    P --&gt; OAI\n    P --&gt; AZO\n    P --&gt; ANT\n    P --&gt; GGP\n    P --&gt; BED\n\n    click OAI \"https://openai.com/api/\" \"OpenAI adapter docs\" _self\n    click ANT \"https://www.anthropic.com/index/overview\" \"Anthropic adapter docs\" _self\n    click GGP \"https://cloud.google.com/vertex-ai/docs/generative-ai/gemini\" \"Gemini adapter docs\" _self\n    click AZO \"https://learn.microsoft.com/en-us/azure/cognitive-services/openai/overview\" \"Azure OpenAI (via OpenAI compat)\" _self\n    click BED \"https://docs.aws.amazon.com/bedrock/latest/userguide/what-is.html\" \"Groq/compat notes\" _self</code></pre>"},{"location":"architecture/overview/#pastas","title":"Pastas","text":"<ul> <li><code>internal/providers/*</code> \u2014 adapters finos por vendor</li> <li><code>internal/registry</code> \u2014 carrega <code>config.example.yml</code>, resolve provider</li> <li><code>internal/transport</code> \u2014 HTTP/SSE, state sync, auth passthrough</li> <li><code>cmd/main.go</code> \u2014 CLI (subcomando <code>gateway</code>)</li> </ul>"},{"location":"architecture/overview/#fluxo-sse","title":"Fluxo SSE","text":"<pre><code>POST /v1/chat \u2500\u2500\u25ba Provider.Chat(ctx, req) \u2500\u2500\u25ba stream\n                                  \u25b2\n                            BYOK s\u00f3 aqui\n</code></pre>"},{"location":"architecture/overview/#state-sync-lww-etag","title":"State Sync (LWW + ETag)","text":"<ul> <li><code>PUT/POST /v1/state/export</code> com <code>If-Match</code>/<code>etag</code></li> <li><code>GET /v1/state/import</code> retorna vers\u00e3o + payload</li> </ul> <p>Simples, test\u00e1vel, port\u00e1vel \u2014 ideal para multi-tenant com BYOK e quotas.</p>"},{"location":"backend/auth-tenancy/","title":"Auth &amp; Tenancy","text":"<p>O gateway suporta multi-tenant e auditoria via headers:</p> <ul> <li><code>X-Tenant-Id</code>: identificador do tenant/organiza\u00e7\u00e3o</li> <li><code>X-User-Id</code>: identificador do usu\u00e1rio</li> </ul> <p>Combine com BYOK por requisi\u00e7\u00e3o usando <code>x-external-api-key</code>.</p> <p>Quando configurado <code>GOBE_BASE_URL</code>, endpoints <code>/v1/auth/*</code> fazem passthrough para o GoBE.</p>"},{"location":"backend/config/","title":"Config (YAML)","text":""},{"location":"backend/config/#configexampleyml","title":"config.example.yml","text":"<pre><code>providers:\n  &lt;name&gt;:\n    type: openai|gemini|anthropic|groq|openrouter|ollama\n    base_url: https://api...\n    key_env: ENV_VAR_NAME\n    default_model: name-or-path\n</code></pre>"},{"location":"backend/config/#variaveis-de-ambiente","title":"Vari\u00e1veis de ambiente","text":"<ul> <li><code>OPENAI_API_KEY</code>, <code>GEMINI_API_KEY</code>, <code>ANTHROPIC_API_KEY</code>, <code>GROQ_API_KEY</code></li> <li><code>PROVIDERS_CFG</code> (default <code>config/config.example.yml</code>)</li> <li><code>ADDR</code> (default <code>:8080</code>)</li> <li><code>GOBE_BASE_URL</code> (opcional; habilita <code>/v1/auth/*</code> passthrough)</li> </ul>"},{"location":"backend/config/#cors","title":"CORS","text":"<p>Padr\u00e3o liberal em dev. Em prod, fixe origem/dom\u00ednios confi\u00e1veis.</p>"},{"location":"backend/observability/","title":"Observability","text":"<ul> <li><code>/healthz</code> para health checks</li> <li><code>/metrics</code> para m\u00e9tricas Prometheus</li> <li>Logs estruturados com contexto de tenant/usu\u00e1rio/provedor</li> </ul> <p>Monitore lat\u00eancia, taxa de erro, tokens e consumo por tenant.</p>"},{"location":"backend/resilience/","title":"Resilience (Rate/Circuit/Retry)","text":"<p>Recomenda\u00e7\u00f5es de produ\u00e7\u00e3o:</p> <ul> <li>Rate limiting por tenant/usu\u00e1rio e provider.</li> <li>Circuit breaker para erros consecutivos de provider.</li> <li>Retry exponencial para falhas transit\u00f3rias (HTTP 429/5xx).</li> </ul> <p>SSE exige keep-alive, timeouts ajustados e proxy com <code>proxy_buffering off;</code>.</p>"},{"location":"cli/commands/","title":"CLI \u2013 analyzer","text":"<p>A CLI exp\u00f5e subcomandos para operar o gateway e o daemon.</p>"},{"location":"cli/commands/#instalacaobuild","title":"Instala\u00e7\u00e3o/Build","text":"<pre><code>make build-dev linux amd64\n./dist/analyzer_linux_amd64 version\n</code></pre>"},{"location":"cli/commands/#comandos","title":"Comandos","text":"<ul> <li><code>analyzer gateway serve [--binding 0.0.0.0 --port 8080 --config config/config.example.yml --cors --debug]</code></li> <li><code>analyzer gateway status</code></li> <li><code>analyzer gateway advise</code> (pr\u00e9via; mensagem informativa)</li> <li><code>analyzer daemon [--gobe-url --gobe-api-key --auto-schedule --schedule-cron --notify-channels --health-interval]</code></li> <li><code>analyzer version</code></li> </ul>"},{"location":"cli/commands/#exemplos","title":"Exemplos","text":"<pre><code># Subir o gateway\nanalyzer gateway serve --config ./config/config.example.yml\n\n# Verificar status\nanalyzer gateway status\n\n# Daemon com GoBE\nanalyzer daemon --gobe-url=http://localhost:3000 --gobe-api-key=$GOBE_API_KEY\n</code></pre> <p>Para chat e providers, use os endpoints HTTP em reference/http.md.</p>"},{"location":"cli/recipes/","title":"Receitas","text":""},{"location":"cli/recipes/#1-structured-output-openai","title":"1) Structured Output (OpenAI)","text":"<pre><code>\"meta\": {\n  \"response_format\": {\n    \"type\":\"json_schema\",\n    \"json_schema\":{\"name\":\"analysis\",\"schema\":{\"type\":\"object\",\"properties\":{\"summary\":{\"type\":\"string\"}},\"required\":[\"summary\"]}}\n  }\n}\n</code></pre>"},{"location":"cli/recipes/#2-function-calling-round-trip","title":"2) Function Calling round-trip","text":"<ol> <li>Gateway emite <code>{\"toolCall\":{\"name\":\"getRepo\",\"args\":{\"id\":\"...\"} }}</code></li> <li>Front/CLI executa e envia mensagem de tool (seu pipeline)</li> <li>Nova chamada <code>/v1/chat</code> com o contexto enriquecido</li> </ol>"},{"location":"cli/recipes/#3-modo-auditoria","title":"3) Modo auditoria","text":"<ul> <li>Sempre roteie via gateway quando quiser usage + quotas + tools sob controle do servidor.</li> </ul>"},{"location":"development/contributing/","title":"Contribuindo","text":"<p>Obrigado por seu interesse em contribuir com o GemxAnalyzer! Este guia explica como voc\u00ea pode ajudar a melhorar o projeto.</p>"},{"location":"development/contributing/#formas-de-contribuir","title":"\ud83c\udfaf Formas de Contribuir","text":""},{"location":"development/contributing/#reportar-bugs","title":"\ud83d\udcdd Reportar Bugs","text":"<p>Encontrou um bug? Ajude-nos a corrigi-lo!</p> <ol> <li>Verifique se j\u00e1 existe uma issue sobre o problema</li> <li>Crie uma nova issue com informa\u00e7\u00f5es detalhadas:</li> <li>Descri\u00e7\u00e3o clara do problema</li> <li>Passos para reproduzir</li> <li>Comportamento esperado vs atual</li> <li>Screenshots ou logs, se aplic\u00e1vel</li> <li>Informa\u00e7\u00f5es do ambiente (SO, vers\u00e3o do Go, etc.)</li> </ol> <p>Template de Bug Report:</p> <pre><code>## Descri\u00e7\u00e3o\n[Descri\u00e7\u00e3o clara e concisa do bug]\n\n## Passos para Reproduzir\n1. Execute o comando '...'\n2. Acesse a p\u00e1gina '...'\n3. Clique em '...'\n4. Veja o erro\n\n## Comportamento Esperado\n[O que deveria acontecer]\n\n## Comportamento Atual\n[O que est\u00e1 acontecendo]\n\n## Ambiente\n- OS: [e.g. Ubuntu 22.04]\n- GemxAnalyzer Version: [e.g. v1.2.3]\n- Go Version: [e.g. 1.21.5]\n- Browser: [e.g. Chrome 120]\n\n## Logs/Screenshots\n[Adicione logs ou screenshots]\n</code></pre>"},{"location":"development/contributing/#solicitar-funcionalidades","title":"\u2728 Solicitar Funcionalidades","text":"<p>Tem uma ideia para melhorar o GemxAnalyzer?</p> <ol> <li>Verifique se j\u00e1 foi solicitada nas issues</li> <li>Descreva claramente a funcionalidade desejada</li> <li>Explique o caso de uso e benef\u00edcios</li> <li>Considere a implementa\u00e7\u00e3o se poss\u00edvel</li> </ol> <p>Template de Feature Request:</p> <pre><code>## Funcionalidade\n[Descri\u00e7\u00e3o clara da funcionalidade]\n\n## Motiva\u00e7\u00e3o\n[Por que esta funcionalidade \u00e9 \u00fatil]\n\n## Solu\u00e7\u00e3o Proposta\n[Como voc\u00ea imagina que deveria funcionar]\n\n## Alternativas Consideradas\n[Outras abordagens que voc\u00ea considerou]\n\n## Contexto Adicional\n[Screenshots, mockups, links, etc.]\n</code></pre>"},{"location":"development/contributing/#contribuir-com-codigo","title":"\ud83d\udcbb Contribuir com C\u00f3digo","text":""},{"location":"development/contributing/#configuracao-do-ambiente","title":"Configura\u00e7\u00e3o do Ambiente","text":"<ol> <li>Fork o reposit\u00f3rio</li> <li>Clone seu fork:</li> </ol> <pre><code>git clone https://github.com/seu-usuario/analyzer.git\ncd analyzer\n</code></pre> <ol> <li>Configure o ambiente:</li> </ol> <pre><code># Instalar depend\u00eancias\nmake deps\n\n# Verificar se tudo est\u00e1 funcionando\nmake test\nmake build\n</code></pre>"},{"location":"development/contributing/#fluxo-de-desenvolvimento","title":"Fluxo de Desenvolvimento","text":"<ol> <li>Crie uma branch para sua funcionalidade:</li> </ol> <pre><code>git checkout -b feature/nome-da-funcionalidade\n</code></pre> <ol> <li> <p>Fa\u00e7a suas altera\u00e7\u00f5es seguindo os padr\u00f5es do projeto</p> </li> <li> <p>Execute os testes:</p> </li> </ol> <pre><code>make test\nmake lint\n</code></pre> <ol> <li>Commit suas altera\u00e7\u00f5es:</li> </ol> <pre><code>git add .\ngit commit -m \"feat: adiciona nova funcionalidade X\"\n</code></pre> <ol> <li>Push para seu fork:</li> </ol> <pre><code>git push origin feature/nome-da-funcionalidade\n</code></pre> <ol> <li>Abra um Pull Request</li> </ol>"},{"location":"development/contributing/#padroes-de-codigo","title":"\ud83d\udccb Padr\u00f5es de C\u00f3digo","text":""},{"location":"development/contributing/#go-backend","title":"Go (Backend)","text":"<ul> <li>Siga os padr\u00f5es do Go: use <code>gofmt</code>, <code>golint</code>, <code>go vet</code></li> <li>Documenta\u00e7\u00e3o: todas as fun\u00e7\u00f5es exportadas devem ter coment\u00e1rios</li> <li>Testes: mantenha cobertura de testes alta</li> <li>Nomenclatura: use conven\u00e7\u00f5es idiom\u00e1ticas do Go</li> </ul> <p>Exemplo:</p> <pre><code>// Package engine provides prompt engineering capabilities\npackage engine\n\n// GeneratePrompt creates a structured prompt from raw ideas\nfunc GeneratePrompt(ideas []string, purpose Purpose) (*Prompt, error) {\n    if len(ideas) == 0 {\n        return nil, errors.New(\"at least one idea is required\")\n    }\n\n    // Implementation...\n    return prompt, nil\n}\n</code></pre>"},{"location":"development/contributing/#typescriptreact-frontend","title":"TypeScript/React (Frontend)","text":"<ul> <li>TypeScript: use tipagem estrita</li> <li>Componentes funcionais: prefira hooks</li> <li>Styled-components: para estiliza\u00e7\u00e3o</li> <li>ESLint/Prettier: para formata\u00e7\u00e3o consistente</li> </ul> <p>Exemplo:</p> <pre><code>interface PromptFormProps {\n  onSubmit: (ideas: string[]) =&gt; void;\n  isLoading?: boolean;\n}\n\nexport const PromptForm: React.FC&lt;PromptFormProps&gt; = ({\n  onSubmit,\n  isLoading = false\n}) =&gt; {\n  const [ideas, setIdeas] = useState&lt;string[]&gt;([]);\n\n  const handleSubmit = useCallback((e: FormEvent) =&gt; {\n    e.preventDefault();\n    onSubmit(ideas);\n  }, [ideas, onSubmit]);\n\n  return (\n    &lt;StyledForm onSubmit={handleSubmit}&gt;\n      {/* Component implementation */}\n    &lt;/StyledForm&gt;\n  );\n};\n</code></pre>"},{"location":"development/contributing/#commits","title":"Commits","text":"<p>Use Conventional Commits:</p> <ul> <li><code>feat:</code> nova funcionalidade</li> <li><code>fix:</code> corre\u00e7\u00e3o de bug</li> <li><code>docs:</code> documenta\u00e7\u00e3o</li> <li><code>style:</code> formata\u00e7\u00e3o (sem mudan\u00e7a de c\u00f3digo)</li> <li><code>refactor:</code> refatora\u00e7\u00e3o</li> <li><code>test:</code> adi\u00e7\u00e3o/corre\u00e7\u00e3o de testes</li> <li><code>chore:</code> tarefas de manuten\u00e7\u00e3o</li> </ul> <p>Exemplos:</p> <pre><code>feat: adiciona suporte para provedor Gemini\nfix: corrige erro de timeout em requests longos\ndocs: atualiza guia de instala\u00e7\u00e3o\ntest: adiciona testes para m\u00f3dulo de templates\n</code></pre>"},{"location":"development/contributing/#process-de-review","title":"\ud83d\udd0d Process de Review","text":""},{"location":"development/contributing/#checklist-do-pull-request","title":"Checklist do Pull Request","text":"<ul> <li> C\u00f3digo segue os padr\u00f5es estabelecidos</li> <li> Testes passam e cobertura n\u00e3o diminui</li> <li> Documenta\u00e7\u00e3o est\u00e1 atualizada</li> <li> Commit messages seguem conventional commits</li> <li> Breaking changes est\u00e3o documentadas</li> <li> Performance n\u00e3o foi degradada</li> </ul>"},{"location":"development/contributing/#o-que-esperamos","title":"O que Esperamos","text":"<ol> <li>C\u00f3digo limpo e leg\u00edvel</li> <li>Testes abrangentes</li> <li>Documenta\u00e7\u00e3o atualizada</li> <li>Compatibilidade mantida</li> <li>Performance considerada</li> </ol>"},{"location":"development/contributing/#processo-de-review","title":"Processo de Review","text":"<ol> <li>Automated checks devem passar</li> <li>Manual review por pelo menos um mantenedor</li> <li>Feedback pode ser solicitado</li> <li>Merge ap\u00f3s aprova\u00e7\u00e3o</li> </ol>"},{"location":"development/contributing/#arquitetura-do-projeto","title":"\ud83c\udfd7\ufe0f Arquitetura do Projeto","text":""},{"location":"development/contributing/#estrutura-de-diretorios","title":"Estrutura de Diret\u00f3rios","text":"<pre><code>analyzer/\n\u251c\u2500\u2500 cmd/                    # CLI entrypoints\n\u2502   \u251c\u2500\u2500 main.go            # Servidor principal\n\u2502   \u2514\u2500\u2500 cli/               # Comandos CLI\n\u251c\u2500\u2500 internal/              # C\u00f3digo interno\n\u2502   \u251c\u2500\u2500 engine/            # Core prompt engineering\n\u2502   \u251c\u2500\u2500 providers/         # AI providers\n\u2502   \u251c\u2500\u2500 services/          # Business logic\n\u2502   \u2514\u2500\u2500 types/             # Type definitions\n\u251c\u2500\u2500 frontend/              # React application\n\u2502   \u251c\u2500\u2500 src/\n\u2502   \u2502   \u251c\u2500\u2500 components/    # React components\n\u2502   \u2502   \u251c\u2500\u2500 hooks/         # Custom hooks\n\u2502   \u2502   \u2514\u2500\u2500 utils/         # Utilities\n\u251c\u2500\u2500 docs/                  # Documenta\u00e7\u00e3o\n\u251c\u2500\u2500 tests/                 # Testes\n\u2514\u2500\u2500 support/               # Scripts de build\n</code></pre>"},{"location":"development/contributing/#componentes-principais","title":"Componentes Principais","text":"<ol> <li>Engine: Core prompt engineering logic</li> <li>Providers: Integra\u00e7\u00f5es com APIs de IA</li> <li>Services: L\u00f3gica de neg\u00f3cio e orquestra\u00e7\u00e3o</li> <li>Frontend: Interface React</li> <li>CLI: Interface de linha de comando</li> </ol>"},{"location":"development/contributing/#testes","title":"\ud83e\uddea Testes","text":""},{"location":"development/contributing/#executar-testes","title":"Executar Testes","text":"<pre><code># Todos os testes\nmake test\n\n# Testes do backend\nmake test-backend\n\n# Testes do frontend\nmake test-frontend\n\n# Testes de integra\u00e7\u00e3o\nmake test-integration\n\n# Coverage\nmake coverage\n</code></pre>"},{"location":"development/contributing/#escrevendo-testes","title":"Escrevendo Testes","text":""},{"location":"development/contributing/#go-backend-tests","title":"Go (Backend Tests)","text":"<pre><code>func TestGeneratePrompt(t *testing.T) {\n    tests := []struct {\n        name     string\n        ideas    []string\n        purpose  Purpose\n        expected *Prompt\n        wantErr  bool\n    }{\n        {\n            name:    \"valid ideas\",\n            ideas:   []string{\"create API\", \"use Node.js\"},\n            purpose: PurposeCode,\n            expected: &amp;Prompt{\n                Content: \"Create a Node.js API...\",\n                Purpose: PurposeCode,\n            },\n            wantErr: false,\n        },\n        // More test cases...\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            result, err := GeneratePrompt(tt.ideas, tt.purpose)\n\n            if tt.wantErr {\n                assert.Error(t, err)\n                return\n            }\n\n            assert.NoError(t, err)\n            assert.Equal(t, tt.expected, result)\n        })\n    }\n}\n</code></pre>"},{"location":"development/contributing/#react-frontend","title":"React (Frontend)","text":"<pre><code>describe('PromptForm', () =&gt; {\n  it('should submit ideas when form is submitted', () =&gt; {\n    const onSubmit = jest.fn();\n    render(&lt;PromptForm onSubmit={onSubmit} /&gt;);\n\n    const input = screen.getByLabelText('Add idea');\n    const submitButton = screen.getByRole('button', { name: 'Generate' });\n\n    fireEvent.change(input, { target: { value: 'test idea' } });\n    fireEvent.click(screen.getByRole('button', { name: 'Add' }));\n    fireEvent.click(submitButton);\n\n    expect(onSubmit).toHaveBeenCalledWith(['test idea']);\n  });\n});\n</code></pre>"},{"location":"development/contributing/#documentacao","title":"\ud83d\udcda Documenta\u00e7\u00e3o","text":""},{"location":"development/contributing/#onde-documentar","title":"Onde Documentar","text":"<ul> <li>README: vis\u00e3o geral e quick start</li> <li>Docs: documenta\u00e7\u00e3o detalhada (MkDocs)</li> <li>C\u00f3digo: coment\u00e1rios inline</li> <li>API: documenta\u00e7\u00e3o de endpoints</li> </ul>"},{"location":"development/contributing/#atualizando-documentacao","title":"Atualizando Documenta\u00e7\u00e3o","text":"<pre><code># Servir docs localmente\ncd support/docs\nmkdocs serve\n\n# Build da documenta\u00e7\u00e3o\nmkdocs build\n\n# Deploy (apenas mantenedores)\nmkdocs gh-deploy\n</code></pre>"},{"location":"development/contributing/#primeiras-contribuicoes","title":"\ud83c\udfaf Primeiras Contribui\u00e7\u00f5es","text":""},{"location":"development/contributing/#good-first-issues","title":"Good First Issues","text":"<p>Procure por issues marcadas com:</p> <ul> <li><code>good-first-issue</code>: ideal para iniciantes</li> <li><code>help-wanted</code>: ajuda \u00e9 bem-vinda</li> <li><code>documentation</code>: melhorias na documenta\u00e7\u00e3o</li> <li><code>bug</code>: corre\u00e7\u00e3o de bugs simples</li> </ul>"},{"location":"development/contributing/#areas-que-precisam-de-ajuda","title":"\u00c1reas que Precisam de Ajuda","text":"<ol> <li>Documenta\u00e7\u00e3o: sempre pode ser melhorada</li> <li>Testes: aumentar cobertura</li> <li>Performance: otimiza\u00e7\u00f5es</li> <li>UI/UX: melhorias na interface</li> <li>Provedores de IA: novos integra\u00e7\u00f5es</li> </ol>"},{"location":"development/contributing/#comunicacao","title":"\ud83d\udcac Comunica\u00e7\u00e3o","text":""},{"location":"development/contributing/#onde-buscar-ajuda","title":"Onde Buscar Ajuda","text":"<ul> <li>GitHub Issues: problemas espec\u00edficos</li> <li>GitHub Discussions: discuss\u00f5es gerais</li> <li>C\u00f3digo: coment\u00e1rios em PRs</li> </ul>"},{"location":"development/contributing/#diretrizes-de-comunicacao","title":"Diretrizes de Comunica\u00e7\u00e3o","text":"<ul> <li>Seja respeitoso e profissional</li> <li>Use portugu\u00eas ou ingl\u00eas conforme preferir</li> <li>Seja espec\u00edfico em perguntas e descri\u00e7\u00f5es</li> <li>Compartilhe contexto relevante</li> </ul>"},{"location":"development/contributing/#reconhecimento","title":"\ud83c\udfc6 Reconhecimento","text":""},{"location":"development/contributing/#contributors","title":"Contributors","text":"<p>Todos os contribuidores s\u00e3o reconhecidos:</p> <ul> <li>README: lista de contributors</li> <li>CHANGELOG: cr\u00e9ditos por release</li> <li>Commits: hist\u00f3rico permanente</li> </ul>"},{"location":"development/contributing/#como-ser-reconhecido","title":"Como ser Reconhecido","text":"<ol> <li>Contribua regularmente</li> <li>Ajude outros contribuidores</li> <li>Mantenha qualidade alta</li> <li>Participe de discuss\u00f5es</li> </ol>"},{"location":"development/contributing/#licenca","title":"\ud83d\udcc4 Licen\u00e7a","text":"<p>Ao contribuir, voc\u00ea concorda que suas contribui\u00e7\u00f5es ser\u00e3o licenciadas sob a MIT License.</p>"},{"location":"development/contributing/#contato","title":"\ud83d\udcde Contato","text":"<ul> <li>GitHub Issues: github.com/kubex-ecosystem/analyzer/issues</li> <li>GitHub Discussions: github.com/kubex-ecosystem/analyzer/discussions</li> <li>Email: atrav\u00e9s do GitHub</li> </ul> <p>Obrigado por contribuir! \ud83d\ude4f</p> <p>Cada contribui\u00e7\u00e3o, por menor que seja, faz a diferen\u00e7a na comunidade open source.</p>"},{"location":"getting-started/concepts/","title":"Concepts","text":"<ul> <li>Modes: exec, code, ops, community \u2014 espelham P1\u2013P4.</li> <li>Metrics: HIR/AAC/TPH como camadas anal\u00edticas por ciclo.</li> <li>Providers: BYOK por requisi\u00e7\u00e3o via <code>x-external-api-key</code>.</li> <li>Tenancy: <code>X-Tenant-Id</code> e <code>X-User-Id</code> para multi-tenant.</li> <li>SSE: transporte unificado com <code>{\"done\":true}</code> e <code>usage</code> ao final.</li> </ul> <p>Consulte tamb\u00e9m Architecture \u2192 Components para detalhes internos e Analytics para exemplos de sa\u00edda.</p>"},{"location":"getting-started/installation/","title":"Instala\u00e7\u00e3o","text":"<p>Esta p\u00e1gina fornece instru\u00e7\u00f5es detalhadas para instalar e configurar o GemxAnalyzer em diferentes plataformas.</p>"},{"location":"getting-started/installation/#opcoes-de-instalacao","title":"\ud83d\udce6 Op\u00e7\u00f5es de Instala\u00e7\u00e3o","text":""},{"location":"getting-started/installation/#opcao-1-download-binario-recomendado","title":"Op\u00e7\u00e3o 1: Download Bin\u00e1rio (Recomendado)","text":"<p>A forma mais simples de instalar o GemxAnalyzer \u00e9 baixando o bin\u00e1rio pr\u00e9-compilado para sua plataforma:</p>"},{"location":"getting-started/installation/#linux-exemplo-local","title":"Linux (exemplo local)","text":"<pre><code>make build-dev linux amd64\n./dist/analyzer_linux_amd64 gateway serve --config ./config/config.example.yml\n</code></pre>"},{"location":"getting-started/installation/#windowsmacos","title":"Windows/macOS","text":"<p>Baixe o bin\u00e1rio correspondente em Releases. O nome segue o padr\u00e3o <code>analyzer_&lt;os&gt;_&lt;arch&gt;</code>.</p>"},{"location":"getting-started/installation/#opcao-2-instalar-via-make","title":"Op\u00e7\u00e3o 2: Instalar via Make","text":"<pre><code>git clone https://github.com/kubex-ecosystem/analyzer\ncd analyzer\nmake build-dev linux amd64\n</code></pre> <p>Este comando compila um bin\u00e1rio local em <code>dist/analyzer_linux_amd64</code>.</p>"},{"location":"getting-started/installation/#opcao-3-compilar-do-codigo-fonte","title":"Op\u00e7\u00e3o 3: Compilar do C\u00f3digo Fonte","text":""},{"location":"getting-started/installation/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Go 1.25+ - Instalar Go</li> <li>Node.js 18+ - Instalar Node.js</li> <li>Make - Dispon\u00edvel na maioria dos sistemas Unix</li> </ul>"},{"location":"getting-started/installation/#passos-de-compilacao","title":"Passos de Compila\u00e7\u00e3o","text":"<pre><code># 1. Clonar o reposit\u00f3rio\ngit clone https://github.com/kubex-ecosystem/analyzer.git\ncd analyzer\n\n# 2. Compilar\nmake build-dev linux amd64\n\n# 3. Executar\n./dist/analyzer_linux_amd64 version\n</code></pre>"},{"location":"getting-started/installation/#compilacao-para-outras-plataformas","title":"Compila\u00e7\u00e3o para Outras Plataformas","text":"<pre><code># Compilar para Windows\nmake build-windows\n\n# Compilar para Linux\nmake build-linux\n\n# Compilar para macOS\nmake build-darwin\n\n# Compilar para todas as plataformas\nmake build-all\n</code></pre>"},{"location":"getting-started/installation/#configuracao-inicial","title":"\u2699\ufe0f Configura\u00e7\u00e3o Inicial","text":""},{"location":"getting-started/installation/#1-verificar-instalacao","title":"1. Verificar Instala\u00e7\u00e3o","text":"<pre><code>./dist/analyzer_linux_amd64 version\n</code></pre>"},{"location":"getting-started/installation/#2-configurar-variaveis-de-ambiente-opcional","title":"2. Configurar Vari\u00e1veis de Ambiente (Opcional)","text":"<p>O GemxAnalyzer funciona em modo demo sem configura\u00e7\u00e3o, mas para usar provedores de IA externos, configure as chaves de API:</p> <pre><code># Adicione ao seu ~/.bashrc, ~/.zshrc, ou ~/.profile\n\n# OpenAI\nexport OPENAI_API_KEY=\"sk-...\"\n\n# Claude (Anthropic)\nexport CLAUDE_API_KEY=\"sk-ant-...\"\n\n# DeepSeek\nexport DEEPSEEK_API_KEY=\"...\"\n\n# Gemini\nexport GEMINI_API_KEY=\"...\"\n\n# Ollama (local)\nexport OLLAMA_ENDPOINT=\"http://localhost:11434\"\n\n# Configura\u00e7\u00f5es do servidor (opcional)\nexport PORT=8080\nexport DEBUG=false\n</code></pre>"},{"location":"getting-started/installation/#3-primeiro-teste","title":"3. Primeiro Teste","text":"<pre><code># Subir gateway (modo demo)\nanalyzer gateway serve --config ./config/config.example.yml\n</code></pre>"},{"location":"getting-started/installation/#configuracao-avancada","title":"\ud83d\udd27 Configura\u00e7\u00e3o Avan\u00e7ada","text":""},{"location":"getting-started/installation/#configuracao-do-servidor","title":"Configura\u00e7\u00e3o do Servidor","text":"<p>Por padr\u00e3o, o GemxAnalyzer roda na porta 8080. Para alterar:</p> <pre><code>export PORT=3000\nanalyzer gateway serve --config ./config/config.example.yml\n</code></pre> <p>Ou diretamente:</p> <pre><code>analyzer gateway serve --port 3000\n</code></pre>"},{"location":"getting-started/installation/#configuracao-de-debug","title":"Configura\u00e7\u00e3o de Debug","text":"<p>Para habilita\u00e7\u00e3o de logs detalhados:</p> <pre><code>export DEBUG=true\nanalyzer gateway serve\n</code></pre>"},{"location":"getting-started/installation/#configuracao-para-ollama-local","title":"Configura\u00e7\u00e3o para Ollama Local","text":"<p>Se voc\u00ea tem o Ollama instalado localmente:</p> <pre><code># Instalar Ollama\ncurl -fsSL https://ollama.ai/install.sh | sh\n\n# Baixar um modelo\nollama pull llama2\n\n# Configurar endpoint\nexport OLLAMA_ENDPOINT=\"http://localhost:11434\"\nexport OLLAMA_MODEL=\"llama2\"\n</code></pre>"},{"location":"getting-started/installation/#solucao-de-problemas","title":"\ud83d\udee0\ufe0f Solu\u00e7\u00e3o de Problemas","text":""},{"location":"getting-started/installation/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"getting-started/installation/#permission-denied-no-linuxmacos","title":"\"Permission denied\" no Linux/macOS","text":"<pre><code>chmod +x analyzer_linux_amd64\n</code></pre>"},{"location":"getting-started/installation/#analyzer-command-not-found","title":"\"analyzer: command not found\"","text":"<p>Certifique-se que o bin\u00e1rio est\u00e1 no PATH:</p> <pre><code>echo $PATH\nwhich analyzer\n</code></pre>"},{"location":"getting-started/installation/#porta-ja-em-uso","title":"Porta j\u00e1 em uso","text":"<pre><code># Verificar qual processo usa a porta\nlsof -i :8080\n\n# Usar porta diferente\nanalyzer gateway serve --port 8081\n</code></pre>"},{"location":"getting-started/installation/#problemas-de-firewall","title":"Problemas de Firewall","text":"<pre><code># Linux: permitir porta no firewall\nsudo ufw allow 8080\n\n# macOS: permitir no firewall do sistema\n# V\u00e1 em System Preferences &gt; Security &amp; Privacy &gt; Firewall\n</code></pre>"},{"location":"getting-started/installation/#logs-de-debug","title":"Logs de Debug","text":"<pre><code>DEBUG=true analyzer gateway serve\n</code></pre>"},{"location":"getting-started/installation/#testar-conectividade","title":"Testar Conectividade","text":"<pre><code># Testar se o servidor est\u00e1 rodando\ncurl http://localhost:8080/healthz\n\n# Testar providers/chat\ncurl -s -X POST localhost:8080/v1/chat -H 'Content-Type: application/json' -d '{\"provider\":\"oai\",\"model\":\"gpt-4o-mini\",\"messages\":[{\"role\":\"user\",\"content\":\"teste\"}],\"stream\":false}' | jq\n</code></pre>"},{"location":"getting-started/installation/#requisitos-do-sistema","title":"\ud83d\udccb Requisitos do Sistema","text":"Sistema Requisitos M\u00ednimos Mem\u00f3ria RAM 100 MB Espa\u00e7o em Disco 50 MB Processador x86_64 ou ARM64 Sistema Operacional Linux, macOS, Windows Rede Conectividade com internet (para provedores de IA externos)"},{"location":"getting-started/installation/#atualizacoes","title":"\ud83d\udd04 Atualiza\u00e7\u00f5es","text":""},{"location":"getting-started/installation/#verificar-versao-atual","title":"Verificar Vers\u00e3o Atual","text":"<pre><code>./dist/analyzer_linux_amd64 version\n</code></pre>"},{"location":"getting-started/installation/#atualizar-para-nova-versao","title":"Atualizar para Nova Vers\u00e3o","text":"<pre><code># Download manual (ajuste para seu OS/arch)\ncurl -L https://github.com/kubex-ecosystem/analyzer/releases/latest/download/analyzer_linux_amd64 -o analyzer-new\nchmod +x analyzer-new\nsudo mv analyzer-new /usr/local/bin/analyzer\n\n# Ou recompilar do c\u00f3digo\ncd analyzer\ngit pull\nmake build-dev linux amd64\nsudo cp dist/analyzer_linux_amd64 /usr/local/bin/analyzer\n</code></pre>"},{"location":"getting-started/installation/#proximos-passos","title":"\ud83d\udcda Pr\u00f3ximos Passos","text":"<ul> <li>In\u00edcio R\u00e1pido - Primeiros passos com o GemxAnalyzer</li> <li>Comandos CLI - Refer\u00eancia completa dos comandos</li> <li>Configura\u00e7\u00e3o - Configura\u00e7\u00e3o detalhada dos provedores de IA</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start (90s)","text":""},{"location":"getting-started/quick-start/#1-providers-byok","title":"1) Providers (BYOK)","text":"<pre><code>export OPENAI_API_KEY=sk-...\nexport GEMINI_API_KEY=...\nexport ANTHROPIC_API_KEY=...\nexport GROQ_API_KEY=...\n</code></pre> <p>Edite <code>config/config.example.yml</code>:</p> <pre><code>providers:\n  oai:    { type: openai,   base_url: https://api.openai.com, key_env: OPENAI_API_KEY,    default_model: gpt-4o-mini }\n  gemini: { type: gemini,   base_url: https://generativelanguage.googleapis.com, key_env: GEMINI_API_KEY, default_model: gemini-2.5-flash }\n  claude: { type: anthropic,base_url: https://api.anthropic.com, key_env: ANTHROPIC_API_KEY, default_model: claude-3-5-sonnet-latest }\n  groq:   { type: groq,     base_url: https://api.groq.com, key_env: GROQ_API_KEY, default_model: llama-3.1-70b-versatile }\n</code></pre>"},{"location":"getting-started/quick-start/#2-subir-o-gateway","title":"2) Subir o gateway","text":"<pre><code>make run\n# health\ncurl -I http://localhost:8080/healthz\n</code></pre>"},{"location":"getting-started/quick-start/#3-listar-providers","title":"3) Listar providers","text":"<pre><code>curl http://localhost:8080/v1/providers | jq\n</code></pre>"},{"location":"getting-started/quick-start/#4-chat-sse","title":"4) Chat (SSE)","text":"<pre><code>curl -N -X POST http://localhost:8080/v1/chat \\\n -H 'Content-Type: application/json' \\\n -H \"x-external-api-key: $OPENAI_API_KEY\" \\\n -d '{\"provider\":\"oai\",\"model\":\"gpt-4o-mini\",\"messages\":[{\"role\":\"user\",\"content\":\"hello\"}],\"stream\":true}'\n</code></pre>"},{"location":"getting-started/quick-start/#5-tools-json-schema","title":"5) Tools &amp; JSON Schema","text":"<p>Envie ferramentas/formatos via <code>meta</code> (pass-through):</p> <pre><code>{\n  \"tools\":[{\"type\":\"function\",\"function\":{\"name\":\"getWeather\",\"parameters\":{\"type\":\"object\",\"properties\":{\"city\":{\"type\":\"string\"}},\"required\":[\"city\"]}}}],\n  \"tool_choice\":\"auto\",\n  \"response_format\":{\"type\":\"json_schema\",\"json_schema\":{\"name\":\"analysis\",\"schema\":{\"type\":\"object\",\"properties\":{\"summary\":{\"type\":\"string\"}},\"required\":[\"summary\"]}}}\n}\n</code></pre> <p>Em produ\u00e7\u00e3o, nunca exponha as keys no frontend; use sempre o gateway. SSE depende de proxy com <code>proxy_buffering off;</code> e keep-alive ajustado.</p>"},{"location":"guides/contextual-chat/","title":"Contextual Code Chat","text":"<p>Use <code>/v1/chat</code> com mensagens que tragam contexto do reposit\u00f3rio (paths, trechos) e ferramentas para busca/leitura.</p> <p>Envie <code>tools</code> via <code>meta</code> e itere pelo loop de tool calling conforme necess\u00e1rio.</p>"},{"location":"guides/e2e-cycle/","title":"First Analyzer Cycle (end-to-end)","text":"<p>1) Configure BYOK e providers no <code>config.example.yml</code>. 2) Suba o gateway com <code>make run</code> e valide <code>/healthz</code>. 3) Liste providers: <code>curl :8080/v1/providers</code>. 4) Fa\u00e7a chat SSE com <code>POST /v1/chat</code> usando <code>x-external-api-key</code>. 5) Gere plano com <code>/v1/advise?mode=exec|code|ops|community</code>. 6) Aplique diffs com LookAtni e abra PR.</p>"},{"location":"guides/lookatni-integration/","title":"LookAtni + Analyzer (repo integration)","text":"<p>Veja integra\u00e7\u00e3o direta em <code>docs/LOOKATNI_DIRECT_INTEGRATION.md</code>.</p> <p>Resumo: - Analyzer emite plano e diffs esperados. - LookAtni valida/aplica patch determin\u00edstico. - Integra com CI/CD para abrir PR autom\u00e1tico.</p>"},{"location":"operations/release/","title":"Release/Build","text":""},{"location":"operations/release/#binary","title":"Binary","text":"<pre><code>make build-dev linux amd64\nls dist/analyzer_linux_amd64\n# opcional: upx --lzma --best dist/analyzer_linux_amd64 || true\n</code></pre>"},{"location":"operations/release/#docker-scratch","title":"Docker (scratch)","text":"<pre><code>FROM golang:1.22 AS builder\nWORKDIR /src\nCOPY . .\nRUN CGO_ENABLED=0 go build -trimpath -ldflags=\"-s -w -buildid=\" -o /out/analyzer ./cmd/main.go\n\nFROM scratch\nCOPY --from=builder /out/analyzer /analyzer\nEXPOSE 8080\nENTRYPOINT [\"/analyzer\", \"gateway\", \"serve\"]\n</code></pre>"},{"location":"operations/release/#artefatos","title":"Artefatos","text":"<ul> <li>CLI: <code>dist/analyzer_&lt;os&gt;_&lt;arch&gt;</code></li> <li>Imagem: ENTRYPOINT roda <code>analyzer gateway serve</code></li> </ul>"},{"location":"operations/security/","title":"Security &amp; BYOK","text":"<ul> <li>Nunca exponha chaves no frontend; use o gateway.</li> <li>BYOK via <code>x-external-api-key</code> por requisi\u00e7\u00e3o.</li> <li>Multi-tenant: <code>X-Tenant-Id</code>, <code>X-User-Id</code> para auditoria e quotas.</li> <li>Configure CORS/TLS e rate limiting em produ\u00e7\u00e3o.</li> </ul> <p>Consulte tamb\u00e9m SECURITY.md (raiz) para pol\u00edtica de vulnerabilidades.</p>"},{"location":"operations/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>401 Unauthorized: cheque <code>x-external-api-key</code> (BYOK) e escopos.</li> <li>429 Too Many Requests: reduza concorr\u00eancia; ajuste rate limit.</li> <li>SSE fecha/trava: <code>proxy_buffering off;</code>, keep-alive e timeouts adequados.</li> <li>CORS: ajuste <code>Access-Control-Allow-Origin</code> no gateway.</li> <li>JSON Schema (OpenAI): envie em <code>meta.response_format</code>.</li> <li>Tools n\u00e3o disparam: <code>tool_choice: \"auto\"</code> e verifique par\u00e2metros obrigat\u00f3rios.</li> </ul>"},{"location":"providers/anthropic/","title":"Anthropic","text":"<ul> <li>Streaming SSE de eventos (<code>content_block_delta</code>, <code>message_delta</code>)</li> <li>Ferramentas: <code>tools</code> + <code>tool_choice</code> (modelo v1 messages)</li> <li>Header <code>anthropic-version</code> exigido</li> </ul> <p>Use <code>x-external-api-key</code> com a chave Anthropic do usu\u00e1rio.</p>"},{"location":"providers/byok/","title":"Providers &amp; BYOK","text":"<p>Suporte multi-provider com Bring Your Own Key por requisi\u00e7\u00e3o.</p>"},{"location":"providers/byok/#variaveis-de-ambiente","title":"Vari\u00e1veis de ambiente","text":"<ul> <li><code>OPENAI_API_KEY</code>, <code>GEMINI_API_KEY</code>, <code>ANTHROPIC_API_KEY</code>, <code>GROQ_API_KEY</code></li> <li><code>PROVIDERS_CFG</code> (default <code>config/config.example.yml</code>)</li> </ul>"},{"location":"providers/byok/#defaults-recomendados","title":"Defaults recomendados","text":"<ul> <li>OpenAI: <code>gpt-4o-mini</code></li> <li>Gemini: <code>gemini-2.5-flash</code></li> <li>Anthropic: <code>claude-3-5-sonnet-latest</code></li> <li>Groq: <code>llama-3.1-70b-versatile</code></li> </ul>"},{"location":"providers/byok/#byok","title":"BYOK","text":"<p>Envie a chave do usu\u00e1rio via header <code>x-external-api-key</code>. Combine com <code>X-Tenant-Id</code> e <code>X-User-Id</code> para multi-tenant/auditoria.</p>"},{"location":"providers/gemini/","title":"Gemini","text":"<ul> <li>Streaming: <code>v1beta/models/{model}:streamGenerateContent?alt=sse</code></li> <li><code>systemInstruction</code> suportado</li> <li>Tools: <code>function_declarations</code> (mapeadas a partir de <code>tools</code>)</li> <li><code>responseMimeType</code>/<code>responseSchema</code> via <code>meta</code> (pass-through)</li> </ul> <p>Use <code>x-external-api-key</code> com a chave Gemini do usu\u00e1rio.</p>"},{"location":"providers/groq/","title":"Groq","text":"<ul> <li>Compat\u00edvel OpenAI (<code>/openai/v1/chat/completions</code>) \u2014 streaming tipo OpenAI.</li> <li>Use modelos como <code>llama-3.1-70b-versatile</code>.</li> </ul> <p>Use <code>x-external-api-key</code> com a chave Groq do usu\u00e1rio.</p>"},{"location":"providers/openai-go-gateway/","title":"OpenAI (via Gateway)","text":"<ul> <li>Endpoint: <code>/v1/chat/completions</code></li> <li>Ative <code>stream_options.include_usage</code> para usage no stream.</li> <li>Tools: <code>{ \"type\":\"function\", \"function\": { name, parameters } }</code></li> <li>JSON Schema: <code>response_format: { type: \"json_schema\", json_schema: {...} }</code></li> </ul> <p>Use <code>x-external-api-key</code> com a chave OpenAI do usu\u00e1rio.</p>"},{"location":"reference/http/","title":"API (HTTP)","text":""},{"location":"reference/http/#post-v1chat-sse","title":"POST /v1/chat (SSE)","text":"<p>Request</p> <pre><code>{\n  \"provider\":\"oai|gemini|claude|groq\",\n  \"model\":\"&lt;string&gt;\",\n  \"messages\":[{\"role\":\"system|user|assistant\",\"content\":\"...\"}],\n  \"temperature\":0.2,\n  \"stream\":true,\n  \"meta\":{\n    \"tools\":[{\"type\":\"function\",\"function\":{\"name\":\"...\",\"parameters\":{}}}],\n    \"tool_choice\":\"auto\",\n    \"response_format\":{\"type\":\"json_schema\",\"json_schema\":{}}\n  }\n}\n</code></pre> <p>Headers (opcionais)</p> <ul> <li><code>x-external-api-key</code>: BYOK do usu\u00e1rio</li> <li><code>X-Tenant-Id</code>, <code>X-User-Id</code>: contexto multi-tenant</li> </ul> <p>Eventos SSE</p> <ul> <li><code>{\"content\":\"...\"}</code></li> <li><code>{\"toolCall\":{\"name\":\"...\",\"args\":{...}}}</code></li> <li><code>{\"done\":true,\"usage\":{\"prompt\":..,\"completion\":..,\"tokens\":..,\"ms\":..}}</code></li> </ul>"},{"location":"reference/http/#get-v1providers","title":"GET /v1/providers","text":"<p>Retorna <code>{ \"providers\": [{ \"Name\": \"oai\", \"Type\": \"openai\" }, ...] }</code></p>"},{"location":"reference/http/#get-v1status","title":"GET /v1/status","text":"<p>Status geral do gateway e produ\u00e7\u00e3o (com m\u00e9tricas de middleware quando habilitado).</p>"},{"location":"reference/http/#get-healthz","title":"GET /healthz","text":"<p>Health check simples do servi\u00e7o.</p>"},{"location":"reference/http/#repository-intelligence-previa","title":"Repository Intelligence (pr\u00e9via)","text":"<ul> <li><code>GET /api/v1/scorecard</code> \u2014 status/placeholder</li> <li><code>POST /api/v1/scorecard/advice</code> \u2014 integra\u00e7\u00e3o planejada com advise</li> <li><code>GET /api/v1/metrics/ai</code> \u2014 HIR/AAC/TPH em desenvolvimento</li> <li><code>GET /api/v1/health</code> \u2014 status do m\u00f3dulo de intelig\u00eancia</li> </ul> <p>Notas</p> <ul> <li><code>/v1/state/*</code> e <code>/v1/advise</code> fazem parte do design, mas ainda n\u00e3o est\u00e3o implementados nesta base. Use os endpoints acima e acompanhe o changelog para disponibilidade.</li> </ul>"}]}